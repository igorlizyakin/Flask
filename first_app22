from flask import Flask, render_template
# для аутонтификации
from flask import Flask, g, jsonify
from flask_httpauth import HTTPTokenAuth
# Для втоиндекса
import os.path
#from flask import Flask
from flask_autoindex import AutoIndex

# для загрузки файлов
#import os
from flask import Flask, flash, request, redirect, url_for
from werkzeug.utils import secure_filename
from flask import send_from_directory

# папка для сохранения загруженных файлов
UPLOAD_FOLDER = './path/to/the/uploads/'
# расширение файлов которые можно загружать
ALLOWED_EXTENSIONS = {'txt', 'pdf', 'png', 'jpg', 'jpeg'}

# экземпляр приложения
app = Flask(__name__)

# конфигурируем
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER


# Автоиндекс
files_index = AutoIndex(app, browse_root=os.path.curdir)
# аутентификация
auth = HTTPTokenAuth(scheme='Bearer')

tokens = {
    'secretsecret': 'User'
}

@auth.verify_token
def verify_token(token):
    if token in tokens:
        return tokens[token]

@app.route('/verify')
@auth.login_required
def verify():
    return jsonify({'USERNAME': auth.current_user()})

# Выполнение автоиндекса
@app.route('/files')
@app.route('/files/<path:path>')
def atindex(path):
    return files_index.render_autoindex(path)

# Вызов домашней страницы
@app.route('/')
@app.route('/home')
def index():
    #return render_template('index.html')
    return '<h1>Hello</h1>'



# Вызов страници пользователя
@app.route('/user/<string:name>/<int:id>')
def user(name, id):
    return 'User page_' + name + '_' + str(id)

def allowed_file(filename):
    #функция проверки расширения файла
    return '.' in filename and \
        filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/uploads/<name>')
# файлы для скачивания
def download_file(name):
    return send_from_directory(app.config["UPLOAD_FOLDER"], name)

# загрузки файла
@app.route('/methods', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        # проверка передачи в запросе файла
        if 'file' not in request.files:
            # перенаправление на страницу загрузки
            flash('Не могу прочитать файл')
            return redirect(request.url)
        file = request.files['file']
# условие если файл не выбран
        if file.filename == '':
            flash('Не выбран файл')
            return redirect(request.url)
        if file and allowed_file(file.filename):
            # извлечение орегинального имени файла
            filename = secure_filename(file.filename)
            # сохраняем файл
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            # Если успешно. перенаправляем на функцию скачивания файла
            return redirect(url_for('download_file', filename=filename))
    return '''
    <!doctype html>
    <html><head><meta charset="utf-8" /></head>
    <body>
    <title>Загрузить новый файл</title>
    <h1>Загрузить новый файл</h1>
    <form method=post enctype=multipart/form-data>
       <input type=file name=file>
       <input type=submit value=Upload>
    </form>
    </body>
    </html>
      '''


if __name__ == '__main__':
  app.run(host='0.0.0.0', port=5000, debug=True)
